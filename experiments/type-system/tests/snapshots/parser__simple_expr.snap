---
source: tests/parser.rs
expression: ast
---
- Binary:
    op: Or
    lhs:
      Use:
        ident:
          lexeme: v
          kind: Ident
    rhs:
      Use:
        ident:
          lexeme: v
          kind: Ident
- Binary:
    op: And
    lhs:
      Use:
        ident:
          lexeme: v
          kind: Ident
    rhs:
      Use:
        ident:
          lexeme: v
          kind: Ident
- Binary:
    op: Equal
    lhs:
      Use:
        ident:
          lexeme: v
          kind: Ident
    rhs:
      Use:
        ident:
          lexeme: v
          kind: Ident
- Binary:
    op: NotEqual
    lhs:
      Use:
        ident:
          lexeme: v
          kind: Ident
    rhs:
      Use:
        ident:
          lexeme: v
          kind: Ident
- Binary:
    op: LessThan
    lhs:
      Use:
        ident:
          lexeme: v
          kind: Ident
    rhs:
      Use:
        ident:
          lexeme: v
          kind: Ident
- Binary:
    op: GreaterThan
    lhs:
      Use:
        ident:
          lexeme: v
          kind: Ident
    rhs:
      Use:
        ident:
          lexeme: v
          kind: Ident
- Binary:
    op: LessEqual
    lhs:
      Use:
        ident:
          lexeme: v
          kind: Ident
    rhs:
      Use:
        ident:
          lexeme: v
          kind: Ident
- Binary:
    op: GreaterEqual
    lhs:
      Use:
        ident:
          lexeme: v
          kind: Ident
    rhs:
      Use:
        ident:
          lexeme: v
          kind: Ident
- Binary:
    op: Add
    lhs:
      Use:
        ident:
          lexeme: v
          kind: Ident
    rhs:
      Use:
        ident:
          lexeme: v
          kind: Ident
- Binary:
    op: Sub
    lhs:
      Use:
        ident:
          lexeme: v
          kind: Ident
    rhs:
      Use:
        ident:
          lexeme: v
          kind: Ident
- Binary:
    op: Mult
    lhs:
      Use:
        ident:
          lexeme: v
          kind: Ident
    rhs:
      Use:
        ident:
          lexeme: v
          kind: Ident
- Binary:
    op: Div
    lhs:
      Use:
        ident:
          lexeme: v
          kind: Ident
    rhs:
      Use:
        ident:
          lexeme: v
          kind: Ident
- Binary:
    op: Rem
    lhs:
      Use:
        ident:
          lexeme: v
          kind: Ident
    rhs:
      Use:
        ident:
          lexeme: v
          kind: Ident
- Binary:
    op: Power
    lhs:
      Use:
        ident:
          lexeme: v
          kind: Ident
    rhs:
      Use:
        ident:
          lexeme: v
          kind: Ident
- Unary:
    op: Negate
    rhs:
      Use:
        ident:
          lexeme: v
          kind: Ident
- Use:
    ident:
      lexeme: v
      kind: Ident
- Unary:
    op: Negate
    rhs:
      Use:
        ident:
          lexeme: v
          kind: Ident
- Use:
    ident:
      lexeme: v
      kind: Ident
- Access:
    target:
      Use:
        ident:
          lexeme: v
          kind: Ident
    field:
      lexeme: f
      kind: Ident
- Call:
    func:
      Use:
        ident:
          lexeme: f
          kind: Ident
    arg:
      Use:
        ident:
          lexeme: v
          kind: Ident
- Call:
    func:
      Use:
        ident:
          lexeme: f
          kind: Ident
    arg:
      Lit:
        Record:
          - ident:
              lexeme: v
              kind: Ident
            value:
              Use:
                ident:
                  lexeme: v
                  kind: Ident
- Call:
    func:
      Access:
        target:
          Use:
            ident:
              lexeme: v
              kind: Ident
        field:
          lexeme: f
          kind: Ident
    arg:
      Use:
        ident:
          lexeme: v
          kind: Ident
- Call:
    func:
      Access:
        target:
          Use:
            ident:
              lexeme: v
              kind: Ident
        field:
          lexeme: f
          kind: Ident
    arg:
      Lit:
        Record:
          - ident:
              lexeme: v
              kind: Ident
            value:
              Use:
                ident:
                  lexeme: v
                  kind: Ident
- Lit:
    Number: 10
- Lit:
    Bool: true
- Lit:
    Bool: false
- Lit:
    String: "\"test\""
- Lit:
    Record:
      - ident:
          lexeme: v
          kind: Ident
        value:
          Use:
            ident:
              lexeme: v
              kind: Ident
- Use:
    ident:
      lexeme: v
      kind: Ident
- Use:
    ident:
      lexeme: v
      kind: Ident

